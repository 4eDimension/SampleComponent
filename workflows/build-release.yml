name: Build release

on:
  workflow_dispatch:
    inputs:
        mode:
          type: choice
          description: Semantic versioning
          options: 
          - patch
          - minor
          - major
          required: true

permissions:
  contents: read
  id-token: write

jobs:
  Increment-version-number:
    permissions: write-all
    #runs-on: ubuntu-latest
    runs-on: [self-hosted, linux]
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Configure
        id: configure
        run: |
          if [ ${mode} = '' ]; then
          echo "mode=patch" >> $GITHUB_OUTPUT          
          else
          echo "mode=${mode}" >> $GITHUB_OUTPUT
          fi
          echo "project_path=${project_path}" >> $GITHUB_OUTPUT 
        shell: bash
        env:
          mode: ${{ inputs.mode }} 

      - name: Copy repository in runner 
        uses: actions/checkout@v4

      - name: Set version
        id: version
        uses: 4eDimension/Tools/.github/actions/package-set-version@main
        with:
          mode: ${{ inputs.mode }}

  Build-releases:
    needs: [Increment-version-number]
    uses: ./.github/workflows/build-continue.yml
    secrets: inherit

  Upload-release-assets:
    permissions: write-all
    needs: [Increment-version-number, Build-releases]
    #runs-on: ubuntu-latest
    runs-on: [self-hosted, linux]
    steps:
      - name: Get version
        id: version
        uses: 4eDimension/Tools/.github/actions/package-get-version@main

      - name: Download artifacts
        id: upload
        run: |
          curl --ftp-ssl-reqd --user ${{ secrets.FTP_PRIVATE_LOGIN }}:'${{ secrets.FTP_PRIVATE_PASSWORD }}' --output ./${{ vars.APPNAME }}_${{ vars.VERSION4D }}_${{ needs.Increment-version-number.outputs.version }}.zip ${{ secrets.FTP_PRIVATE_PATH }}${{ vars.APPNAME }}.zip
        shell: bash

      - name: Upload assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./${{ vars.APPNAME }}_${{ vars.VERSION4D }}_*
          tag: ${{ needs.Increment-version-number.outputs.version }}
          body: ${{ vars.APPNAME }} v${{ needs.Increment-version-number.outputs.version }} (compiled for Intel and Silicon)
          file_glob: true

  Update-version-badge:
    needs: [Increment-version-number, Build-releases, Upload-release-assets]
    #runs-on: ubuntu-latest
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install

      - name: Get version
        id: version
        run: |
          git pull origin main
          version=`cat package.json | jq -r '.version'`
          echo "version=${version}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Update Version Badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ vars.GISTID }}
          filename: release_${{ vars.APPNAME }}.json
          label: Version
          message: ${{ steps.version.outputs.version }}
          color: blue